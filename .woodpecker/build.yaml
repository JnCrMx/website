variables:
  - &minio-settings
    access_key:
      from_secret: minio_access_key
    secret_key:
      from_secret: minio_secret_key
    endpoint:
      from_secret: minio_endpoint
    path_style: true
    region: eu-central-jcm

steps:
  build:
    image: ubuntu:noble
    commands:
      - apt-get update
      - DEBIAN_FRONTEND=noninteractive apt-get install -y curl
      - mkdir -p /etc/apt/keyrings
      - curl https://apt.llvm.org/llvm-snapshot.gpg.key -o /etc/apt/keyrings/llvm.asc
      - echo "deb [signed-by=/etc/apt/keyrings/llvm.asc] http://apt.llvm.org/noble/ llvm-toolchain-noble main" > /etc/apt/sources.list.d/llvm.list
      - apt-get update
      - >-
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
        cmake git ca-certificates ninja-build
        clang-20 clang-tools-20 lld-20 wabt
        libc++-20-dev-wasm32 libclang-rt-20-dev-wasm32
      - mkdir build
      - >-
        cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel
        -DCMAKE_C_COMPILER=clang-20 -DCMAKE_CXX_COMPILER=clang++-20
        -S . -B build 2>&1 | tee build/cmake-configure.log
      - cmake --build build --parallel=2 2>&1 | tee build/cmake-build.log
      - cp -r public build/public
      - cp build/website.wasm build/public/website.wasm
      - wasm-strip build/public/website.wasm
  upload-logs:
    image: woodpeckerci/plugin-s3
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/cmake-*.log
      strip_prefix: build/
      target: /artifacts/${CI_REPO}/${CI_PIPELINE_NUMBER}/public/
    when:
      - status: [ success, failure ]
  upload-website:
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      port:
        from_secret: ssh_port
      target: /config/data/website
      source: build/public/
      strip_components: 2
